# Generated by Django 5.0.14 on 2025-10-04 16:17

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=32, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('lecture_hours', models.PositiveSmallIntegerField(default=0)),
                ('tutorial_hours', models.PositiveSmallIntegerField(default=0)),
                ('practical_hours', models.PositiveSmallIntegerField(default=0)),
                ('self_study_hours', models.PositiveSmallIntegerField(default=0)),
                ('credits', models.PositiveSmallIntegerField(default=0)),
                ('is_half_semester', models.BooleanField(default=False)),
                ('is_elective', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LabAssistant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MessHours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('day_of_week', models.IntegerField(choices=[(0, 'Mon'), (1, 'Tue'), (2, 'Wed'), (3, 'Thu'), (4, 'Fri'), (5, 'Sat'), (6, 'Sun')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('department', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('building', models.CharField(blank=True, max_length=128)),
                ('capacity', models.PositiveIntegerField(default=0)),
                ('room_type', models.CharField(choices=[('CLASSROOM', 'Classroom'), ('LAB', 'Laboratory'), ('HALL', 'Examination Hall')], default='CLASSROOM', max_length=16)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Slot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=16, unique=True)),
                ('day_of_week', models.IntegerField(choices=[(0, 'Mon'), (1, 'Tue'), (2, 'Wed'), (3, 'Thu'), (4, 'Fri'), (5, 'Sat'), (6, 'Sun')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('roll_number', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('program', models.CharField(blank=True, max_length=128)),
                ('batch', models.CharField(help_text='Batch or graduation year, e.g., 2026', max_length=64)),
                ('section', models.CharField(help_text='Section like A, B, C, etc.', max_length=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Timetable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(default='Default', max_length=128)),
                ('effective_from', models.DateField(blank=True, null=True)),
                ('effective_to', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='api.course')),
            ],
            options={
                'ordering': ['date', 'start_time'],
                'unique_together': {('course', 'date')},
            },
        ),
        migrations.AddField(
            model_name='course',
            name='instructors',
            field=models.ManyToManyField(related_name='courses', to='api.professor'),
        ),
        migrations.CreateModel(
            name='ProfessorAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('day_of_week', models.IntegerField(choices=[(0, 'Mon'), (1, 'Tue'), (2, 'Wed'), (3, 'Thu'), (4, 'Fri'), (5, 'Sat'), (6, 'Sun')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availabilities', to='api.professor')),
            ],
            options={
                'ordering': ['professor', 'day_of_week', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='RoomAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('day_of_week', models.IntegerField(choices=[(0, 'Mon'), (1, 'Tue'), (2, 'Wed'), (3, 'Thu'), (4, 'Fri'), (5, 'Sat'), (6, 'Sun')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availabilities', to='api.room')),
            ],
            options={
                'ordering': ['room', 'day_of_week', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='InvigilationDuty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invigilation_duties', to='api.exam')),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='invigilation_duties', to='api.professor')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='invigilation_duties', to='api.room')),
            ],
            options={
                'unique_together': {('exam', 'professor', 'room')},
            },
        ),
        migrations.CreateModel(
            name='ExamRoomAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('capacity_used', models.PositiveIntegerField(default=0)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_allocations', to='api.exam')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='exam_allocations', to='api.room')),
            ],
            options={
                'unique_together': {('exam', 'room')},
            },
        ),
        migrations.CreateModel(
            name='SeatingAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('row_index', models.PositiveIntegerField(default=0)),
                ('col_index', models.PositiveIntegerField(default=0)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seating_assignments', to='api.exam')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='seating_assignments', to='api.room')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seating_assignments', to='api.student')),
            ],
            options={
                'unique_together': {('exam', 'room', 'row_index', 'col_index')},
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='api.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='api.student')),
            ],
            options={
                'unique_together': {('course', 'student')},
            },
        ),
        migrations.CreateModel(
            name='ClassSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('section', models.CharField(help_text='Section like A, B, C for this session', max_length=10)),
                ('is_tutorial', models.BooleanField(default=False)),
                ('is_practical', models.BooleanField(default=False)),
                ('color_code', models.CharField(default='#3498db', help_text='Hex color for timetable display', max_length=7)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_sessions', to='api.course')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='class_sessions', to='api.professor')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='class_sessions', to='api.room')),
                ('slot', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='class_sessions', to='api.slot')),
                ('timetable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='api.timetable')),
            ],
            options={
                'unique_together': {('timetable', 'course', 'slot', 'section')},
            },
        ),
    ]
